{"version":3,"sources":["scripts/main.js"],"names":["lastPushedHeader","tableHead","document","querySelector","tableBody","sortColumnWithtWords","indexOfColumn","pushedHeader","tableRows","arrayWithSortedItems","querySelectorAll","sort","a","b","arg1","children","innerHTML","arg2","localeCompare","dataset","methodSort","reverse","item","append","sortColumnWithNumbers","convertIntoNumber","arrayWithStrings","removeSign","replace","arrayWithNumrers","Number","slice","addEventListener","occurrent","target","cellIndex","formNewEmployee","createElement","className","body","buttonFormNewEmployee","creareNewItemOfTable","fullname","name","position","office","age","salary","itemOfTable","convertSalaryInRightFormat","clearForm","formFilds","formSelector","value","options","selected","toString","pushNotification","title","description","containerOfNotification","qa","classList","add","setTimeout","remove","setNewValue","selectedItem","startedValueSelectedRow","firstElementChild","select","isNaN","type","ev","key","nodeName","blur","editEnd","input","length","occurrence","preventDefault","formInformation","FormData","infoOfEmployee","Object","fromEntries","entries","selectorOfForm","selectedValue","selectedIndex","text","get","values","e","selectedRow","contains","row","parentElement"],"mappings":"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","file":"main.5811ac59.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// --Sort table--\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nlet lastPushedHeader;\n\ntableHead.addEventListener('click', (occurrent) => {\n  const indexOfColumn = occurrent.target.cellIndex;\n  const pushedHeader = occurrent.target;\n\n  if (!tableHead.children) {\n    return;\n  }\n\n  switch (indexOfColumn) {\n    case 0:\n    case 1:\n    case 2: sortColumnWithtWords(indexOfColumn, pushedHeader);\n      break;\n    case 3:\n    case 4: sortColumnWithNumbers(indexOfColumn, pushedHeader);\n      break;\n  }\n});\n\nfunction sortColumnWithtWords(indexOfColumn, pushedHeader) {\n  const tableRows = tableBody.querySelectorAll('tr');\n\n  const arrayWithSortedItems = [ ...tableRows ].sort((a, b) => {\n    const arg1 = a.children[indexOfColumn].innerHTML;\n    const arg2 = b.children[indexOfColumn].innerHTML;\n\n    return arg1.localeCompare(arg2);\n  });\n\n  //  check whether header pushed first  time\n\n  if (lastPushedHeader !== pushedHeader) {\n    pushedHeader.dataset.methodSort = 'asc';\n    lastPushedHeader = pushedHeader;\n  }\n\n  // select a sort method\n\n  if (pushedHeader.dataset.methodSort === 'desc') {\n    arrayWithSortedItems.reverse();\n    pushedHeader.dataset.methodSort = 'asc';\n  } else {\n    pushedHeader.dataset.methodSort = 'desc';\n  }\n\n  for (const item of arrayWithSortedItems) {\n    tableBody.append(item);\n  }\n};\n\nfunction sortColumnWithNumbers(indexOfColumn, pushedHeader) {\n  const tableRows = tableBody.querySelectorAll('tr');\n\n  const arrayWithSortedItems = [ ...tableRows ].sort((a, b) => {\n    const arg1 = a.children[indexOfColumn].innerHTML;\n    const arg2 = b.children[indexOfColumn].innerHTML;\n\n    if (indexOfColumn === 4) {\n      return convertIntoNumber(arg1) - convertIntoNumber(arg2);\n    }\n\n    return +arg1 - (+arg2);\n  });\n\n  //  check whether header pushed first  time\n\n  if (lastPushedHeader !== pushedHeader) {\n    pushedHeader.dataset.methodSort = 'asc';\n    lastPushedHeader = pushedHeader;\n  }\n\n  // select a sort method\n\n  if (pushedHeader.dataset.methodSort === 'desc') {\n    arrayWithSortedItems.reverse();\n    pushedHeader.dataset.methodSort = 'asc';\n  } else {\n    pushedHeader.dataset.methodSort = 'desc';\n  }\n\n  for (const item of arrayWithSortedItems) {\n    tableBody.append(item);\n  }\n}\n\nfunction convertIntoNumber(arrayWithStrings) {\n  const removeSign = arrayWithStrings.replace(',', '');\n  const arrayWithNumrers = Number(removeSign.slice(1));\n\n  return arrayWithNumrers;\n}\n\n// --Creare new employee--\nconst formNewEmployee = document.createElement('form');\n\nformNewEmployee.className = 'new-employee-form';\n\nformNewEmployee.innerHTML = `\n    <label  data-qa=\"name\">Name: \n        <input name=\"name\" type=\"text\">\n    </label>\n    <label data-qa=\"position\">Position:\n         <input name=\"position\" type=\"text\">\n    </label>\n    <label data-qa=\"office\">Office: \n        <select>  \n            <option value=\"Tokyo\">Tokyo</option>  \n            <option value=\"Singapore\">Singapore</option>  \n            <option value=\"London\">London</option>  \n            <option value=\"NewYork\">New York</option>  \n            <option value=\"Edinburgh\">Edinburgh</option>  \n            <option value=\"SanFrancisco\">San Francisco</option>  \n        </select>\n    </label>\n    <label  data-qa=\"age\">Age:\n         <input name=\"age\" type=\"number\">\n    </label>\n    <label data-qa=\"salary\">Salary:\n        <input name=\"salary\" type=\"number\">\n    </label>\n    <button type =\"submit\" >Save to table</button>\n`;\n\ndocument.body.append(formNewEmployee);\n\nconst buttonFormNewEmployee = formNewEmployee.querySelector('button');\n\nbuttonFormNewEmployee.addEventListener('click', (occurrence) => {\n  occurrence.preventDefault();\n\n  const formInformation = new FormData(formNewEmployee);\n  const infoOfEmployee = Object.fromEntries(formInformation.entries());\n  const selectorOfForm = formNewEmployee.querySelector('select');\n  const selectedValue = selectorOfForm.options[selectorOfForm.selectedIndex];\n\n  infoOfEmployee.office = selectedValue.text;\n\n  if (formInformation.get('name').length < 4) {\n    pushNotification('Error',\n      '\"Name\" value has less than 4 letters', 'error');\n\n    return;\n  };\n\n  if (formInformation.get('age') < 18\n    || formInformation.get('age') > 90) {\n    pushNotification('Error',\n      '\"Age\" shouldn`t be less than 18 or more than 90', 'error');\n\n    return;\n  };\n\n  for (const value of Object.values(infoOfEmployee)) {\n    if (value.length === 0) {\n      pushNotification('Error',\n        'All fields are required', 'error');\n\n      return;\n    }\n  };\n\n  creareNewItemOfTable(infoOfEmployee);\n\n  pushNotification('Success',\n    'You added new employee', 'success');\n});\n\nfunction creareNewItemOfTable({ name: fullname, position, office,\n  age, salary }) {\n  const itemOfTable = document.createElement('tr');\n\n  itemOfTable.innerHTML = `\n        <td>${fullname}</td>\n        <td>${position}</td>\n        <td>${office}</td>\n        <td>${age}</td>\n        <td>${convertSalaryInRightFormat(salary)}</td>\n    `;\n\n  tableBody.append(itemOfTable);\n  clearForm();\n}\n\nfunction clearForm() {\n  const formFilds = formNewEmployee.querySelectorAll('input');\n  const formSelector = formNewEmployee.querySelector('select');\n\n  for (const item of formFilds) {\n    item.value = '';\n  }\n\n  formSelector.options[0].selected = true;\n}\n\nfunction convertSalaryInRightFormat(salary) {\n  return `$${salary.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`;\n}\n\nfunction pushNotification(title, description, className) {\n  const containerOfNotification = document.createElement('div');\n\n  containerOfNotification.dataset.qa = 'notification';\n  containerOfNotification.className = 'notification';\n  containerOfNotification.classList.add(className);\n\n  document.body.append(containerOfNotification);\n\n  containerOfNotification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  setTimeout(() => {\n    containerOfNotification.remove();\n  }, 3000);\n}\n\n// --Make row selected--\n\ntableBody.addEventListener('click', (e) => {\n  const selectedRow = e.target;\n\n  if (!tableBody.contains(selectedRow)) {\n    return;\n  }\n\n  for (const row of tableBody.children) {\n    if (row.className === 'active') {\n      row.classList.remove('active');\n    }\n  }\n  selectedRow.parentElement.className = 'active';\n});\n\n// --Implement editing of table--\n\ntableBody.addEventListener('dblclick', (e) => {\n  const selectedItem = e.target;\n\n  if (!tableBody.contains(selectedItem)) {\n    return;\n  }\n\n  setNewValue(selectedItem);\n});\n\nfunction setNewValue(selectedItem) {\n  const startedValueSelectedRow = selectedItem.innerHTML;\n\n  selectedItem.innerHTML = '<input class=\"cell-input\">';\n  selectedItem.firstElementChild.select();\n\n  if (!isNaN(+startedValueSelectedRow)) {\n    selectedItem.firstElementChild.type = 'number';\n  } else {\n    selectedItem.firstElementChild.type = 'text';\n  }\n\n  selectedItem.addEventListener('keydown', (ev) => {\n    if (ev.key === 'Enter') {\n      if (ev.target.nodeName === 'INPUT') {\n        selectedItem.firstElementChild.blur();\n      }\n    }\n  });\n\n  selectedItem.firstElementChild.addEventListener('blur', (ev) => {\n    editEnd();\n  });\n\n  function editEnd() {\n    const input = selectedItem.firstElementChild;\n\n    if (input.value.length === 0) {\n      selectedItem.innerHTML = startedValueSelectedRow;\n\n      return;\n    }\n\n    selectedItem.innerHTML = input.value;\n  }\n}\n"]}